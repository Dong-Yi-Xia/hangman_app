{"version":3,"sources":["components/Header.js","components/Figure.js","components/WrongLetters.js","components/Word.js","components/Notification.js","helpers/helpers.js","components/Popup.js","App.js","index.js"],"names":["Header","Figure","errors","wrongLetters","length","height","width","className","x1","y1","x2","y2","cx","cy","r","WrongLetters","id","map","letter","i","reduce","prev","curr","Word","selectedWord","correctLetters","split","includes","Notification","showNotification","setter","setTimeout","checkWin","correct","wrong","word","status","forEach","Popup","setPlayable","playAgain","finalMessage","finalMessageRevealWord","playable","useEffect","style","display","onClick","App","useState","setSelectedWord","setCorrectLetters","setWrongLetters","setShowNotification","getRandomWord","a","fetch","res","json","data","console","log","handleKeydown","evt","key","keyCode","toLowerCase","show","currentLetters","window","addEventListener","removeEventListener","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.a80a9dbc.chunk.js","sourcesContent":["import React from 'react'\n\nconst Header = () => {\n    return (\n        <>\n            <h1>Welcome To Hangman</h1>\n            <p> ?? Guess The Word ??</p>\n            <p> New Game - Press 'ENTER' </p>\n            <p> Please enter a letter ...</p>\n        </>\n    )\n}\n\nexport default Header\n","import React from 'react'\n\nconst Figure = ({wrongLetters}) => {\n    const errors = wrongLetters.length\n\n\n    return (\n        <svg height=\"250\" width=\"200\" className=\"figure-container\">\n            {/* <!-- Rod --> */}\n            <line x1=\"60\" y1=\"20\" x2=\"140\" y2=\"20\" />\n            <line x1=\"140\" y1=\"20\" x2=\"140\" y2=\"50\" />\n            <line x1=\"60\" y1=\"20\" x2=\"60\" y2=\"230\" />\n            <line x1=\"20\" y1=\"230\" x2=\"100\" y2=\"230\" />\n\n            {/*<!-- Head -->*/}\n            {errors > 0 && <circle cx=\"140\" cy=\"70\" r=\"20\" />}\n            {/* <!-- Body --> */}\n            {errors > 1 && <line x1=\"140\" y1=\"90\" x2=\"140\" y2=\"150\" />}\n            {/* <!-- Arms --> */}\n            {errors > 2 && <line x1=\"140\" y1=\"120\" x2=\"120\" y2=\"100\" />}\n            {errors > 3 && <line x1=\"140\" y1=\"120\" x2=\"160\" y2=\"100\" />}\n            {/* <!-- Legs --> */}\n            {errors > 4 && <line x1=\"140\" y1=\"150\" x2=\"120\" y2=\"180\" />}\n            {errors > 5 &&  <line x1=\"140\" y1=\"150\" x2=\"160\" y2=\"180\" />}\n        </svg>\n    )\n}\n\nexport default Figure\n\n\n","import React from 'react'\n\nconst WrongLetters = ({wrongLetters}) => {\n    return (\n        <div className='wrong-letters-container'>\n            <div id='wrong-letters'>\n                {wrongLetters.length > 0 && <p>Wrong</p>}\n                {wrongLetters\n                    .map((letter, i) => <span key={i}>{letter}</span>)\n                    .reduce((prev, curr) => prev === null ? [curr] : [prev, ', ', curr], null)\n                }\n            </div>\n        </div>\n    )\n}\n\nexport default WrongLetters\n","import React from 'react'\n\nconst Word = ({selectedWord, correctLetters}) => {\n    return (\n        <div className='word'>\n            {selectedWord.split('').map( (letter, i) => {\n                return(\n                    <span className=\"letter\" key={i}>\n                        {correctLetters.includes(letter) ? letter : ''}\n                    </span>\n                )\n            })}\n        </div>\n    )\n}\n\nexport default Word\n","import React from 'react'\n\nconst Notification = ({showNotification}) => {\n    return (\n        <div className={`notification-container ${showNotification ? 'show' : ''}` }>\n            <p>You have already entered this letter</p>\n        </div>\n    )\n}\n\nexport default Notification\n","export function showNotification(setter){\n    setter(true)\n    //after 2 second set setter back to false \n    setTimeout(() => {\n        setter(false)\n    }, 2000)\n}\n\n\n\nexport function checkWin(correct, wrong, word){\n    let status = 'win'\n    //check for win, if correct does not have the letter, true, game in progress\n    word.split('').forEach(letter => {\n        if(!correct.includes(letter)){\n            status = ''\n        }\n    })\n    //check for lose\n    if(wrong.length === 6) status = 'lose'\n\n    return status\n}","import React, {useEffect} from 'react'\nimport {checkWin} from '../helpers/helpers'\n\nconst Popup = ({correctLetters, wrongLetters, selectedWord, setPlayable, playAgain }) => {\n    let finalMessage = ''\n    let finalMessageRevealWord = ''\n    let playable = true\n    \n\n    if( checkWin(correctLetters, wrongLetters, selectedWord) === 'win'){\n        finalMessage = 'Congratulation! You Won!'\n        playable = false\n    } \n    else if ( checkWin(correctLetters, wrongLetters, selectedWord) === 'lose'){\n        finalMessage = 'Sorry, You Lost!'\n        finalMessageRevealWord = `... the word was: ${selectedWord}`\n        playable = false \n    }\n\n    useEffect(() => {\n         setPlayable(playable);\n    })\n\n\n    return (\n        <div className=\"popup-container\" style={finalMessage !== '' ? {display:'flex'} : {}}>\n            <div className=\"popup\" >\n                <h2>{finalMessage}</h2>\n                <h3>{finalMessageRevealWord}</h3>\n                <button onClick={playAgain}>Play Again</button>\n            </div>\n        </div>\n    )\n}\n\nexport default Popup\n","import React, {useState, useEffect} from 'react'\nimport './App.css';\nimport Header from './components/Header'\nimport Figure from './components/Figure'\nimport WrongLetters from './components/WrongLetters'\nimport Word from './components/Word'\nimport Notification from './components/Notification'\nimport Popup from './components/Popup'\nimport {showNotification as show} from './helpers/helpers'\n\n\n\n// const words = ['app', 'programming', 'interface', 'wizard'];\n// let selectedWord = words[Math.floor(Math.random() * words.length)];\n\n// https://random-word-api.herokuapp.com/word\n\n\n\nfunction App() {\n  const [selectedWord, setSelectedWord] = useState('')\n  const [playable, setPlayable] = useState(true)\n  const [correctLetters, setCorrectLetters] = useState([])\n  const [wrongLetters, setWrongLetters] = useState([])\n  const [showNotification, setShowNotification] = useState(false)\n\n\n  const getRandomWord = async () => {\n      let res = await fetch('https://random-word-api.herokuapp.com/word')\n      let data = await res.json()\n      console.log(data[0])\n      setSelectedWord(data[0])\n  }\n\n  useEffect(() => {\n      getRandomWord()\n  }, [])\n\n\n  useEffect(() => {\n    const handleKeydown = evt => {\n      const { key, keyCode } = evt\n      // console.log(key)\n      if (playable && keyCode >= 65 && keyCode <= 90) {\n          const letter = key.toLowerCase();\n          if (selectedWord.includes(letter)) {\n            if (!correctLetters.includes(letter)) {\n              //create a new array, by spreading in the currentLetters\n              setCorrectLetters(currentLetters => [...currentLetters, letter])\n            } else {\n              show(setShowNotification)\n            }\n          } else {\n            if (!wrongLetters.includes(letter)) {\n              //create a new array, by spreading in the currentLetters\n              setWrongLetters(currentLetters => [...currentLetters, letter])\n            } else {\n              show(setShowNotification)\n            }\n          }\n        }\n       \n        else if(key === 'Enter') playAgain()\n     }\n\n    window.addEventListener('keydown', handleKeydown)\n\n    //cleanup so there is only 1 event listner when rerender\n    return () => window.removeEventListener('keydown', handleKeydown)\n\n    //empty [] will be render on inital render. Having dependences when updated, this function will be called\n  }, [selectedWord, correctLetters, wrongLetters, playable])\n\n\n  function playAgain(){\n    setPlayable(true)\n    setCorrectLetters([])\n    setWrongLetters([])\n    getRandomWord()\n  }\n\n \n\n  return (\n    <div className='main'>\n      <Header />\n      <div className='game-container'>\n        <Figure wrongLetters={wrongLetters}/>\n        <WrongLetters wrongLetters={wrongLetters}/>\n        <Word selectedWord={selectedWord} correctLetters={correctLetters}/>\n      </div>\n        <Popup correctLetters={correctLetters} wrongLetters={wrongLetters} selectedWord={selectedWord} setPlayable={setPlayable} playAgain={playAgain}/>\n        <Notification showNotification={showNotification}/>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}